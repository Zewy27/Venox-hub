local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/shlexware/Orion/main/source")))()
local Window =
    OrionLib:MakeWindow(
    {Name = "Venox | Blue lock rivals", HidePremium = false, SaveConfig = true, ConfigFolder = "venox"}
)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local connections = {}
local Tab = Window:MakeTab({Name = "Info", Icon = "rbxassetid://15862513462", PremiumOnly = false})
Tab:AddParagraph("By:Venox Hub", "Discord: discord.gg/epgExpDd")
Tab:AddButton(
    {Name = "Copy link discord", Callback = function()
            setclipboard("discord.gg/epgExpDd")
        end}
)
Tab = Window:MakeTab({Name = "Main", Icon = "rbxassetid://15862513462", PremiumOnly = false})
Tab:AddSection({Name = "Pvp"})
Tab:AddToggle(
    {
        Name = "Inf stamina",
        Default = false,
        Callback = function(value)
            if connections.stamina then
                connections.stamina:Disconnect()
                connections.stamina = nil
            end
            if value then
                connections.stamina =
                    RunService.Heartbeat:Connect(
                    function()
                        pcall(
                            function()
                                ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild(
                                    "StaminaService"
                                ):WaitForChild("RE"):WaitForChild("DecreaseStamina"):FireServer(0 / 0)
                            end
                        )
                    end
                )
            end
        end
    }
)
getgenv().autoTPBall = false
getgenv().teleportDelay = 0.1
local function getBall()
    return workspace:FindFirstChild("Football") or workspace:FindFirstChild("Ball")
end
local function ballTP()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local ball = getBall()
        if ball and ball:FindFirstChild("BallAnims") and ball.BallAnims:FindFirstChild("BALL") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = ball.BallAnims.BALL.CFrame + Vector3.new(0, 5, 0)
        end
    end
end
Tab:AddToggle(
    {
        Name = "Grab ball",
        Default = false,
        Callback = function(value)
            if connections.ballTp then
                connections.ballTp:Disconnect()
                connections.ballTp = nil
            end
            if value then
                connections.ballTp =
                    RunService.Heartbeat:Connect(
                    function()
                        pcall(ballTP)
                        task.wait(getgenv().teleportDelay)
                    end
                )
            end
        end
    }
)
Tab:AddSlider(
    {
        Name = "Teleport delay",
        Min = 0,
        Max = 15,
        Default = 1,
        Color = Color3.fromRGB(255, 255, 255),
        Increment = 1,
        ValueName = "",
        Callback = function(value)
            getgenv().teleportDelay = value
        end
    }
)
Tab:AddButton(
    {
        Name = "Bring ball [Gui]",
        Callback = function()
            getgenv().TeleportBall = false
            getgenv().onoffgui = true
            local ScreenGui = Instance.new("ScreenGui")
            local Frame = Instance.new("Frame")
            local ToggleButton = Instance.new("TextButton")
            local Title = Instance.new("TextLabel")
            local OnOffToggleButton = Instance.new("TextButton")
            ScreenGui.Name = "BallTeleportGUI"
            ScreenGui.Parent = game.CoreGui
            ScreenGui.ResetOnSpawn = false
            Frame.Name = "MainFrame"
            Frame.Parent = ScreenGui
            Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            Frame.BorderSizePixel = 2
            Frame.Position = UDim2.new(0.4, 0, 0.3, 0)
            Frame.Size = UDim2.new(0, 200, 0, 130)
            Frame.Active = true
            Frame.Draggable = true
            Title.Name = "Title"
            Title.Parent = Frame
            Title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            Title.Size = UDim2.new(1, 0, 0.2, 0)
            Title.Font = Enum.Font.SourceSansBold
            Title.Text = "Bring ball"
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 20
            ToggleButton.Name = "ToggleButton"
            ToggleButton.Parent = Frame
            ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
            ToggleButton.Position = UDim2.new(0.1, 0, 0.3, 0)
            ToggleButton.Size = UDim2.new(0.8, 0, 0.25, 0)
            ToggleButton.Font = Enum.Font.SourceSansBold
            ToggleButton.Text = "Teleport: OFF"
            ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleButton.TextSize = 18
            OnOffToggleButton.Name = "OnOffToggleButton"
            OnOffToggleButton.Parent = Frame
            OnOffToggleButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
            OnOffToggleButton.Position = UDim2.new(0.1, 0, 0.6, 0)
            OnOffToggleButton.Size = UDim2.new(0.8, 0, 0.25, 0)
            OnOffToggleButton.Font = Enum.Font.SourceSansBold
            OnOffToggleButton.Text = "Delete gui"
            OnOffToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            OnOffToggleButton.TextSize = 18
            if connections.ballGui then
                connections.ballGui:Disconnect()
                connections.ballGui = nil
            end
            ToggleButton.MouseButton1Click:Connect(
                function()
                    getgenv().TeleportBall = not getgenv().TeleportBall
                    ToggleButton.Text = getgenv().TeleportBall and "Bring: ON" or "Bring: OFF"
                end
            )
            OnOffToggleButton.MouseButton1Click:Connect(
                function()
                    getgenv().onoffgui = not getgenv().onoffgui
                    Frame.Visible = getgenv().onoffgui
                    OnOffToggleButton.Text = getgenv().onoffgui and "Hide GUI" or "Show GUI"
                    OnOffToggleButton.BackgroundColor3 =
                        getgenv().onoffgui and Color3.fromRGB(150, 0, 0) or Color3.fromRGB(0, 150, 0)
                end
            )
            connections.ballGui =
                RunService.RenderStepped:Connect(
                function()
                    if getgenv().TeleportBall then
                        local ball = getBall()
                        if ball and ball:IsA("BasePart") then
                            LocalPlayer.Character.HumanoidRootPart.CFrame = ball.CFrame + Vector3.new(0, 3, 0)
                        end
                    end
                end
            )
        end
    }
)
getgenv().Aimbotball = false
Tab:AddToggle(
    {
        Name = "Aimlock ball",
        Default = false,
        Callback = function(value)
            if connections.aimlock then
                connections.aimlock:Disconnect()
                connections.aimlock = nil
            end
            if value then
                connections.aimlock =
                    RunService.RenderStepped:Connect(
                    function()
                        local ball = getBall()
                        if ball and ball:IsA("BasePart") then
                            Camera.CFrame = CFrame.new(Camera.CFrame.Position, ball.Position)
                        end
                    end
                )
            end
        end
    }
)
Tab = Window:MakeTab({Name = "Player", Icon = "rbxassetid://15862513462", PremiumOnly = false})
getgenv().TPSpeed = 3
getgenv().TPWalk = false
Tab:AddToggle(
    {
        Name = "CFrame speed",
        Default = false,
        Callback = function(s)
            if connections.speed then
                connections.speed:Disconnect()
                connections.speed = nil
            end
            getgenv().TPWalk = s
            if s then
                connections.speed =
                    RunService.Heartbeat:Connect(
                    function()
                        local chr = LocalPlayer.Character
                        local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
                        if chr and hum and hum.Parent and hum.MoveDirection.Magnitude > 0 then
                            chr:TranslateBy(hum.MoveDirection * getgenv().TPSpeed)
                        end
                    end
                )
            end
        end
    }
)
Tab:AddSlider(
    {
        Name = "Speed value",
        Min = 1,
        Max = 20,
        Default = 2,
        Color = Color3.fromRGB(255, 255, 255),
        Increment = 1,
        ValueName = "",
        Callback = function(value)
            getgenv().TPSpeed = value
        end
    }
)
local isJumpPowerEnabled = false
Tab:AddToggle(
    {Name = "Jump", Default = false, Callback = function(enabled)
            isJumpPowerEnabled = enabled
        end}
)
Tab:AddSlider(
    {
        Name = "Jump value",
        Min = 9,
        Max = 500,
        Default = 40,
        Color = Color3.fromRGB(255, 255, 255),
        Increment = 1,
        ValueName = "",
        Callback = function(value)
            if connections.jump then
                connections.jump:Disconnect()
                connections.jump = nil
            end
            local humanoid = LocalPlayer.Character:WaitForChild("Humanoid")
            connections.jump =
                humanoid.Jumping:Connect(
                function(isActive)
                    if isJumpPowerEnabled and isActive then
                        local rootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                        if rootPart then
                            LocalPlayer.Character:SetPrimaryPartCFrame(
                                LocalPlayer.Character:GetPrimaryPartCFrame() + Vector3.new(0, value, 0)
                            )
                        end
                    end
                end
            )
        end
    }
)
local IJ = false
Tab:AddToggle(
    {
        Name = "Inf jump",
        Default = false,
        Callback = function(state)
            if connections.infJump then
                connections.infJump:Disconnect()
                connections.infJump = nil
            end
            IJ = state
            if state then
                connections.infJump =
                    UserInputService.JumpRequest:Connect(
                    function()
                        if IJ then
                            LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
                        end
                    end
                )
            end
        end
    }
)
Tab:AddToggle(
    {
        Name = "No clip",
        Default = false,
        Callback = function(Value)
            if connections.noclip then
                connections.noclip:Disconnect()
                connections.noclip = nil
            end
            getgenv().NoclipEnabled = Value
            if Value then
                connections.noclip =
                    RunService.Stepped:Connect(
                    function()
                        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                            if part:IsA("BasePart") then
                                part.CanCollide = false
                            end
                        end
                    end
                )
            end
        end
    }
)
Tab = Window:MakeTab({Name = "Esp", Icon = "rbxassetid://15862513462", PremiumOnly = false})
Tab:AddSection({Name = "Esp player"})
local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()
ESP:Toggle(true)
ESP.Players = false
ESP.Tracers = false
ESP.Boxes = false
ESP.Names = false
Tab:AddToggle(
    {Name = "Esp enable", Default = false, Callback = function(Value)
            ESP.Players = Value
        end}
)
Tab:AddToggle(
    {Name = "Esp name", Default = false, Callback = function(Value)
            ESP.Names = Value
        end}
)
Tab:AddToggle(
    {Name = "Esp box", Default = false, Callback = function(Value)
            ESP.Boxes = Value
        end}
)
Tab:AddToggle(
    {Name = "Esp tracer", Default = false, Callback = function(Value)
            ESP.Tracers = Value
        end}
)
Tab:AddSection({Name = "Esp ball"})
getgenv().espEnabled = false
getgenv().tracerColor = Color3.fromRGB(0, 0, 255)
local tracerLine = Drawing.new("Line")
tracerLine.Thickness = 2
tracerLine.Transparency = 1
Tab:AddToggle(
    {
        Name = "Esp tracer",
        Default = false,
        Callback = function(value)
            if connections.ballEsp then
                connections.ballEsp:Disconnect()
                connections.ballEsp = nil
            end
            getgenv().espEnabled = value
            if value then
                connections.ballEsp =
                    RunService.RenderStepped:Connect(
                    function()
                        local ball = getBall()
                        if ball and LocalPlayer.Character then
                            local ballPosition = ball.Position
                            local characterRoot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                            if characterRoot then
                                local screenPosBall = Camera:WorldToViewportPoint(ballPosition)
                                local screenPosPlayer = Camera:WorldToViewportPoint(characterRoot.Position)
                                tracerLine.From = Vector2.new(screenPosPlayer.X, screenPosPlayer.Y)
                                tracerLine.To = Vector2.new(screenPosBall.X, screenPosBall.Y)
                                tracerLine.Color = getgenv().tracerColor
                                tracerLine.Visible = true
                            else
                                tracerLine.Visible = false
                            end
                        else
                            tracerLine.Visible = false
                        end
                    end
                )
            end
        end
    }
)
Tab:AddColorpicker(
    {Name = "Color", Default = Color3.fromRGB(0, 0, 255), Callback = function(value)
            getgenv().tracerColor = value
        end}
)
getgenv().Espdistance = false
getgenv().Espcolor = Color3.fromRGB(0, 0, 255)
Tab:AddToggle(
    {
        Name = "Esp distance",
        Default = false,
        Callback = function(value)
            if connections.distanceEsp then
                connections.distanceEsp:Disconnect()
                connections.distanceEsp = nil
            end
            getgenv().Espdistance = value
            if value then
                connections.distanceEsp =
                    RunService.RenderStepped:Connect(
                    function()
                        local ball = getBall()
                        if ball and ball:IsA("BasePart") then
                            local esp = ball:FindFirstChild("BallESP")
                            if not esp then
                                local billboardGui = Instance.new("BillboardGui")
                                billboardGui.Name = "BallESP"
                                billboardGui.Adornee = ball
                                billboardGui.Size = UDim2.new(2, 0, 2, 0)
                                billboardGui.AlwaysOnTop = true
                                local distanceLabel = Instance.new("TextLabel")
                                distanceLabel.Name = "DistanceLabel"
                                distanceLabel.Parent = billboardGui
                                distanceLabel.Size = UDim2.new(1, 0, 1, 0)
                                distanceLabel.BackgroundTransparency = 1
                                distanceLabel.TextColor3 = getgenv().Espcolor
                                distanceLabel.Font = Enum.Font.SourceSansBold
                                distanceLabel.TextSize = 20
                                distanceLabel.TextStrokeTransparency = 0.5
                                billboardGui.Parent = ball
                            end
                            if esp and esp:FindFirstChild("DistanceLabel") then
                                local distance =
                                    (LocalPlayer.Character.HumanoidRootPart.Position - ball.Position).Magnitude
                                esp.DistanceLabel.Text = string.format("Distance: %.1f", distance)
                            end
                        end
                    end
                )
            else
                for _, obj in pairs(workspace:GetDescendants()) do
                    if obj:IsA("BillboardGui") and obj.Name == "BallESP" then
                        obj:Destroy()
                    end
                end
            end
        end
    }
)
Tab:AddColorpicker(
    {Name = "Color", Default = Color3.fromRGB(0, 0, 255), Callback = function(value)
            getgenv().Espcolor = value
        end}
)
Tab = Window:MakeTab({Name = "Misc", Icon = "rbxassetid://15862513462", PremiumOnly = false})
Tab:AddSection({Name = "Chat"})
Tab:AddToggle(
    {
        Name = "Spam chat",
        Default = false,
        Callback = function(state)
            if connections.chat then
                connections.chat:Disconnect()
                connections.chat = nil
            end
            getgenv().enabled = state
            if state then
                connections.chat =
                    RunService.Heartbeat:Connect(
                    function()
                        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(
                            getgenv().chattext,
                            "All"
                        )
                        task.wait(1)
                    end
                )
            end
        end
    }
)

Tab:AddTextbox(
    {Name = "Message", Default = "Venox I made For you", TextDisappear = true, Callback = function(text)
            getgenv().chattext = text
        end}
)
Tab:AddSection({Name = "Server"})
Tab:AddButton(
    {
        Name = "Server hop",
        Callback = function()
            local Http = game:GetService("HttpService")
            local TPS = game:GetService("TeleportService")
            local _place = game.PlaceId
            local _servers = "https://games.roblox.com/v1/games/" .. _place .. "/servers/Public?sortOrder=Asc&limit=100"
            local function ListServers(cursor)
                local Raw = game:HttpGet(_servers .. ((cursor and "&cursor=" .. cursor) or ""))
                return Http:JSONDecode(Raw)
            end
            local Server, Next
            repeat
                local Servers = ListServers(Next)
                Server = Servers.data[1]
                Next = Servers.nextPageCursor
            until Server
            TPS:TeleportToPlaceInstance(_place, Server.id, LocalPlayer)
        end
    }
)
Tab:AddButton(
    {
        Name = "Rejoin",
        Callback = function()
            game:GetService("TeleportService"):Teleport(game.PlaceId, LocalPlayer)
        end
    }
)
game:GetService("CoreGui").ChildRemoved:Connect(
    function(child)
        if child.Name == "Venox" then
            for _, connection in pairs(connections) do
                if connection then
                    connection:Disconnect()
                end
            end
            connections = {}
            if tracerLine then
                tracerLine:Remove()
            end
        end
    end
)
